<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wJwsd6RpP4VCwAAAABJRU5ErkJggg==
</value>
  </data>
</root>